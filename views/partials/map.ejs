<div id="map" style="height:620px"></div>

<script>
class Basemap {
    constructor(rootTag, options) {
        options.center = L.latLngBounds(options.maxBounds).getCenter();
        this.map = L.map(rootTag, options);
        this.layer = {}
        this.layer.basemap = L.tileLayer('https://stamen-tiles-{s}.a.ssl.fastly.net/toner-lite/{z}/{x}/{y}.{ext}', {
            ext: 'png'
        });
        this.layer.geojson = [];
        this.marker = [];
        this.map.addLayer(this.layer.basemap);
    }
    addGeoJSON(geojson, options) {
        var geojsonLayer = L.geoJSON(geojson, options);
        this.map.addLayer(geojsonLayer);
        this.layer.geojson.push(geojsonLayer);

        
    }
    addTemperature(geojson) {
        var startDomain = 5;
        var endDomain = 35;
        var scale = chroma.scale('RdBu').domain([endDomain, startDomain]);
        this.addGeoJSON(geojson, {
            style: function (feature) {
                var s = {};
                s.fillColor = scale(feature.properties.value).hex();
                s.fillOpacity = 0.8;
                s.stroke = false;
                s.fillRule = 'nonzero';
                return s;
            }
        });

        var map = this.map;
        var legend = L.control({position: 'bottomright'});
        legend.onAdd = function (map) {
            var div = L.DomUtil.create('div', 'info legend');
            var colors = scale.colors(20);

            var gradient = '<i style="background: linear-gradient(to right'
            for(var i=0; i<colors.length; i++){
                gradient += ","+ colors[colors.length-1-i] + " " + (i*100/(colors.length-1)) +"%";
            }
            gradient += ');"></i><br>';

            div.innerHTML += gradient;
            div.innerHTML += startDomain
            for(var i=0; i<44; i++){
                div.innerHTML += "&nbsp;"
            }
            div.innerHTML += endDomain

            return div;
        };
        legend.addTo(map);
    }
    addPrecipitation(geojson) {
        var startDomain = 0;
        var endDomain = 150;
        var scale = chroma.scale('YlGnBu').domain([startDomain, endDomain]);
        this.addGeoJSON(geojson, {
            style: function (feature) {
                var s = {};
                s.fillColor = scale(feature.properties.value).hex();
                s.fillOpacity = 0.65;
                s.stroke = false;
                s.fillRule = 'nonzero';
                return s;
            }
        });
        
        var map = this.map;
        var legend = L.control({position: 'bottomright'});
        legend.onAdd = function (map) {
            var div = L.DomUtil.create('div', 'info legend');
            var colors = scale.colors(20);

            var gradient = '<i style="background: linear-gradient(to right'
            for(var i=0; i<colors.length; i++){
                gradient += ","+ colors[i] + " " + (i*100/(colors.length-1)) +"%";
            }
            gradient += ');"></i><br>';

            div.innerHTML += gradient;
            div.innerHTML += startDomain
            for(var i=0; i<43; i++){
                div.innerHTML += "&nbsp;"
            }
            div.innerHTML += endDomain

            return div;
        };
        legend.addTo(map);
    }
    addTemperatureStation(stationArray) {
        for(let i=0; i < stationArray.length; i++) {
            let stationData = stationArray[i];
            var map = this.map
            let markerOptions = {
                title: 'eiei'
            }
            let marker = L.marker([stationData.lat, stationData.lon], markerOptions).addTo(map)
                .bindPopup('Station: '+stationData.code+'<br>Lat: '+stationData.lat+'<br>Lon: '+stationData.lon+'<br>Temperature: '+stationData.value+' Â°C');
            this.marker.push(marker);
        }
    }
    addPrecipitationStation(stationArray) {
        for(let i=0; i < stationArray.length; i++) {
            let stationData = stationArray[i];
            var map = this.map
            let markerOptions = {
                title: 'eiei'
            }
            let marker = L.marker([stationData.lat, stationData.lon], markerOptions).addTo(map)
                .bindPopup('Station: '+stationData.code+'<br>Lat: '+stationData.lat+'<br>Lon: '+stationData.lon+'<br>Rain: '+((stationData.value==1)?'Fall':'Not fall'));
            this.marker.push(marker);
        }
    }
}
</script>

<script>

var map = new Basemap('map', {
    zoom: 4.3,
    minZoom: 4.3,
	maxZoom: 20,
    maxBounds: [[-14.8144, 89.4891],[26.9569, 146.5108]],
    preferCanvas: true
});

var attribute = <%- JSON.stringify(attr) %>
var geojson = <%- JSON.stringify(data) %>
var stationData = <%- JSON.stringify(sData) %>
if(attribute == 'tas'){
    map.addTemperature(geojson);
    map.addTemperatureStation(stationData);
} else if(attribute == 'pr'){
    map.addPrecipitation(geojson);
    map.addPrecipitationStation(stationData);
}


</script>